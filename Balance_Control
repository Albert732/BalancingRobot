#include <Wire.h>
// Direcction I2C of IMU
#define MPU 0x68
// Ratios of convertion
#define A_R 16384.0
#define G_R 131.0
// Convertion of radians to degres 180/PI
#define RAD_A_DEG = 57.295779
// MPU-6050 da los valores en enteros de 16 bits
// Clean values
int16_t AcX, AcY, AcZ, GyX, GyY, GyZ;
 
// Angles
float Acc[2];
float Gy[2];
float Angle[2];

// Motors
int IN1 = 5, IN2 = 6;
int IN3 = 10, IN4 = 11;

void setup(){
      Wire.begin();
      Wire.beginTransmission(MPU);
      Wire.write(0x6B);
      Wire.write(0);
      Wire.endTransmission(true);
       pinMode(IN1, OUTPUT);
       pinMode(IN2, OUTPUT);
       pinMode(IN3, OUTPUT);
       pinMode(IN4, OUTPUT);
      Serial.begin(9600);
}

void loop(){
   // Read acelerometer values of IMU
   Wire.beginTransmission(MPU);
   Wire.write(0x3B); // Record 0x3B - correspond to AcX
   Wire.endTransmission(false);
   Wire.requestFrom(MPU,6,true); // in front of 0x3B, it want 6 records
   AcX=Wire.read()<<8|Wire.read(); // each value have 2 records
   AcY=Wire.read()<<8|Wire.read();
   AcZ=Wire.read()<<8|Wire.read();
 
    // For reference values of acelerometer, calculate angle values X and Y respectively
    // with the tangent formula.
   Acc[1] = atan(-1*(AcX/A_R)/sqrt(pow((AcY/A_R),2) + pow((AcZ/A_R),2)))*RAD_TO_DEG;
   Acc[0] = atan((AcY/A_R)/sqrt(pow((AcX/A_R),2) + pow((AcZ/A_R),2)))*RAD_TO_DEG;
 
   // Read gyroscope values
   Wire.beginTransmission(MPU);
   Wire.write(0x43);
   Wire.endTransmission(false);
   // only you have 4 records
   Wire.requestFrom(MPU,4,true); 
   GyX=Wire.read()<<8|Wire.read();
   GyY=Wire.read()<<8|Wire.read();
 
   // Calculate gyroscope values
   Gy[0] = GyX/G_R;
   Gy[1] = GyY/G_R;
 
   // Apply the filter
   Angle[0] = 0.98 *(Angle[0]+Gy[0]*0.010) + 0.02*Acc[0];
   Angle[1] = 0.98 *(Angle[1]+Gy[1]*0.010) + 0.02*Acc[1];
 
   // Show values in console
  // Serial.print("Angle X: "); Serial.print(Angle[0]); Serial.print("\n"); Serial.print("Angle Y: "); Serial.print(Angle[1]); Serial.print("\n------------\n");
   Serial.print("Angle X: "); Serial.print(Angle[0]); Serial.print(" __ Angle Y: "); Serial.print(Angle[1]); Serial.print("\n------------\n");
 
       if (Angle[1]<0){
         avanza();   
       }else if(Angle[0]>0){
        reversa(); 
       } 
 // Sample will be , 0.010, this is the time interval 
   delay(250);
}

// Motor instructions
void avanza(){
 digitalWrite(IN1, 254);
 digitalWrite(IN2, 0);
 digitalWrite(IN3, 254);
 digitalWrite(IN4, 0);
 }
 
void reversa(){
 digitalWrite(IN1, 0);
 digitalWrite(IN2, 254);
 digitalWrite(IN3, 0);
 digitalWrite(IN4, 254);
 }
